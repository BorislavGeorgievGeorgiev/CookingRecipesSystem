@page "/authentication/login"

@inject NavigationManager navigationManager
@inject IAuthService AuthService
@*@inject AuthStateProvider authStateProvider*@

<h1 class="h2 font-weight-normal login-title">
  Login
</h1>

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="loginRequest">
  <DataAnnotationsValidator />

  <label for="inputUsername" class="sr-only">User Name</label>
  <InputText id="inputUsername" class="form-control" @bind-Value="loginRequest.Email" autofocus placeholder="Email" />
  <ValidationMessage For="@(() => loginRequest.Email)" />

  <label for="inputPassword" class="sr-only">Password</label>
  <InputText type="password" id="inputPassword" class="form-control" placeholder="Password"
    @bind-Value="loginRequest.Password" />
  <ValidationMessage For="@(() => loginRequest.Password)" />

  <button class="btn btn-lg btn-primary btn-block" type="submit">Sign in</button>

  <label class="text-danger">@error</label>  
</EditForm>

@code {
  UserLoginModel loginRequest { get; set; } = new UserLoginModel();

  string? error { get; set; }

  async Task OnSubmit()
  {
    error = null!;

    try
    {
      await AuthService.Login(loginRequest);
      navigationManager.NavigateTo("");
    }
    catch (Exception ex)
    {
      error = ex.Message;
    }
  }
}